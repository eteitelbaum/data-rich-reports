{
  "hash": "b9e5476a4da453aec0048dcab8057cb1",
  "result": {
    "markdown": "---\ntitle: \"Module 5.1\"\nsubtitle: \"Your First Shiny App\"\nformat: html\nhighlight-style: atom-one\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n\n\n:::{.callout-tip}\n## Prework\n- Get a [FRED API key](https://fred.stlouisfed.org/docs/api/api_key.html)\n- Install [fredr](https://cran.r-project.org/web/packages/fredr/vignettes/fredr.html) and read about its basic usage\n- Install [shiny](https://shiny.posit.co/) and read about the \n:::\n\n## Overview\n\n\n\n## Scatter plot app\n\n<iframe src=\"https://emmanuelteitelbaum.shinyapps.io/vdem-scatter-plot/\" width=\"780\" height=\"500\" data-external=\"1\"></iframe>\n\n\n## Setup \n\n{{< video https://www.youtube.com/embed/wo9vZccmqwc title = 'View regression results with broom'>}}\n\n### Wrangle data and produce .csv file\n\nSay something about how to set up an app.R script. We could include this code in app.R file, but it would require more resources than a free account. So instead we will wrangle the data first and save it in a .csv file. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vdemdata)\nlibrary(dplyr)\nlibrary(readr)\n\ndem_data <- vdem |>\n  filter(year > 2000) |>\n  select(\n    country = country_name, \n    polyarchy = v2x_polyarchy,\n    clientelism = v2xnp_client,\n    corruption = v2xnp_regcorr,\n    womens_emp = v2x_gender,\n    gdp_pc = e_gdppc,\n    inf_mort = e_peinfmor,\n    life_exp = e_pelifeex,\n    education = e_peaveduc,\n    region = e_regionpol_6C \n  ) |>   mutate(\n    region = case_match(region, \n                        1 ~ \"Eastern Europe\", \n                        2 ~ \"Latin America\",  \n                        3 ~ \"Middle East\",   \n                        4 ~ \"Africa\", \n                        5 ~ \"The West\", \n                        6 ~ \"Asia\")\n  ) |>\n  group_by(country, region) |>\n  summarize_all(mean, na.rm = TRUE)\n\n#glimpse(dem_data)\n\nwrite_csv(dem_data, \"dem_data.csv\")\n```\n:::\n\n\nThis chunk we will include in the app.R script. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(shiny)\nlibrary(readr)\nlibrary(ggplot2)\n\n# load the data \ndem_data <- read_csv(\"dem_data.csv\")\n\n# create list of named values for the input selection\nvars <- c(\"Democracy\" = \"polyarchy\",\n          \"Clientelism\" = \"clientelism\",\n          \"Corruption\" = \"corruption\",\n          \"Women's Empowerment\" = \"womens_emp\",\n          \"Wealth\" = \"gdp_pc\",\n          \"Infant Mortality\" = \"inf_mort\",\n          \"Life Expectancy\" = \"life_exp\", \n          \"Education\" = \"education\")\n```\n:::\n\n\n## ui \n\n{{< video https://www.youtube.com/embed/wo9vZccmqwc title = 'User interface (UI)'>}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"Democracy and Development\"),\n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n      sidebarPanel(\n        selectInput('xcol', 'X Variable', vars),\n        selectInput('ycol', 'Y Variable', vars, selected = vars[[6]])\n      ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           plotOutput(\"scatterplot\")\n        )\n    )\n)\n```\n:::\n\n\n\n## Server\n\n{{< video https://www.youtube.com/embed/wo9vZccmqwc title = 'Server'>}}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define server logic required to draw a scatter plot\nserver <- function(input, output, session) {\n  \n  # Render the plot\n  output$scatterplot <- renderPlot({\n    \n    # Combine the selected variables into a new data frame\n    selectedData <- dem_data[, c(input$xcol, input$ycol, \"region\")]\n    \n    # ggplot call\n    ggplot(selectedData(), aes_string(x = input$xcol, y = input$ycol)) +\n      geom_point(aes(color = region)) +\n      geom_smooth(method = \"loess\") +\n      scale_color_viridis_d(option = \"plasma\") +\n      theme_minimal() +\n      labs(\n        x =  names(vars[which(vars == input$xcol)]),\n        y =  names(vars[which(vars == input$ycol)]),\n        caption = \"Source: V-Dem Institute\", # caption\n        color = \"Region\" # legend title\n      )\n  })\n}\n```\n:::\n\n\n## Call to Shiny app\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# See above for the definitions of ui and server\nui <- ...\n\nserver <- ...\n\n# Run the application \nshinyApp(ui = ui, server = server)\n```\n:::\n",
    "supporting": [
      "module-5.1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}