{
  "hash": "379e45bc753f969c997c8670ebf5201a",
  "result": {
    "markdown": "---\ntitle: \"Module 3.1\"\nsubtitle: \"Choropleth Maps\"\nformat: html\nhighlight-style: atom-one\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n\n\n## Prework\n\n\n- Optional: install `magick` and underlying file system to [remove whitespace](https://www.pmassicotte.com/posts/2022-08-15-removing-whitespace-around-figures-quarto/) around maps\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a hook to crop maps as recommended by pmassicotte\n# must have `magick` and its dependencies installed\n\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop)\n```\n:::\n\n\n## Grabbing country shapes from rnaturalearth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(dplyr)\n\nworld_map_df <- ne_countries(scale = \"medium\", returnclass = \"sf\") |> \n    filter(iso_a3 != \"ATA\") # remove Antarctica\n\n#world_map_df |>\n  # select and view first 10 columns\n  #select(1:10) |> \n  #glimpse()\n\nworld_map_df |>\n  select(geometry) # view contents of last column of df (geometry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 232 features and 0 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -58.49229 xmax: 180 ymax: 83.59961\nCRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\nFirst 10 features:\n                         geometry\n1  MULTIPOLYGON (((31.28789 -2...\n2  MULTIPOLYGON (((30.39609 -1...\n3  MULTIPOLYGON (((53.08564 16...\n4  MULTIPOLYGON (((104.064 10....\n5  MULTIPOLYGON (((-60.82119 9...\n6  MULTIPOLYGON (((12.43916 41...\n7  MULTIPOLYGON (((166.7458 -1...\n8  MULTIPOLYGON (((70.94678 42...\n9  MULTIPOLYGON (((-53.37061 -...\n10 MULTIPOLYGON (((162.9832 5....\n```\n:::\n:::\n\n\n## Make a map with geom_sf()\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data = world_map_df) +\n  geom_sf(aes(fill = as.factor(income_grp))) + \n  labs(title = \"World Bank country income categories\")\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Beautify your map\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\nggplot(data = world_map_df) +\n  geom_sf(aes(fill = as.factor(income_grp))) + \n  labs(\n    title = \"World Bank country income categories\",\n    fill = \"Category\"\n    ) +\n    theme_map() + \n    scale_fill_viridis_d()\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Merging rnaturalearth with other data\n\nWe are going to use iso2c to do the merge\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(wbstats)\n\noil_rents_df <- wb_data(c(oil_rents_gdp = \"NY.GDP.PETR.RT.ZS\"), mrnev = 1) \n\nrents_map_df <- left_join(world_map_df, oil_rents_df, join_by(iso_a2 == iso2c))\n\nrents_map_df |>\n  select(last_col(5):last_col()) |> #select last 5 columns of df\n  glimpse() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 232\nColumns: 6\n$ date          <dbl> 2020, 2020, 2018, 2020, 2014, NA, 2020, 2020, 2020, 2020…\n$ oil_rents_gdp <dbl> 0.0000000, 0.0000000, 4.5313107, 0.6775696, 11.3636580, …\n$ obs_status    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ footnote      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ last_updated  <date> 2023-03-01, 2023-03-01, 2023-03-01, 2023-03-01, 2023-03…\n$ geometry      <MULTIPOLYGON [°]> MULTIPOLYGON (((31.28789 -2..., MULTIPOLYGO…\n```\n:::\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nggplot(data = rents_map_df) +\n  geom_sf(aes(fill = oil_rents_gdp)) + # change var\n  labs(\n    title = \"Oil rents as a % of GDP\", # change title\n    subtitle = \"(Most recent available data)\", # add subtitle\n    fill = \"Percent\", # change legend title\n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    legend.position = \"right\", \n    plot.title = element_text(face = \"bold\") #,\n    #legend.title = element_text(size = 8),\n    #legend.text = element_text(size = 6)\n    ) +\n  scale_fill_viridis_c( # chg from discrete (_d) to continuous (_c)\n      option = \"magma\", #  chg to magma theme\n      labels = scales::label_percent(scale = 1) # add % label for legend\n      ) \n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Turn your map into a function\n\n- save this code as an R. script \n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), # change variable id\n    join_by(iso_a2 == iso2c)\n  ) |> \n  filter(iso_a3 != \"ATA\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + # remove quotes\n  labs(\n    title =  title, # change title\n    fill = legend_title, # change legend title\n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = \"magma\", #  chg theme\n    direction = direction # change direction of scale\n    )\n}\n\ncreate_map(var_id = \"SL.TLF.CACT.FE.ZS\", \n           title= \"Female Labor Force Participation\", \n           legend_title = \"FLFP %\", \n           theme = \"inferno\", \n           direction = -1)\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Use R file as a \"source\" in another document\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"functions/wb-maps.R\", local = knitr::knit_global())\n```\n:::\n\n\nNow I write some text here and then I want to show map, so I call the `create_map()` function that we just made. Let's say I want to show a different indicator with a different theme, maybe GDP per capita. Let's search for it using the wb_search() tool: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_search(\"GDP per capita\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 3\n   indicator_id       indicator                                   indicator_desc\n   <chr>              <chr>                                       <chr>         \n 1 5.51.01.10.gdp     Per capita GDP growth                       GDP per capit…\n 2 6.0.GDPpc_constant GDP per capita, PPP (constant 2011 interna… GDP per capit…\n 3 NV.AGR.PCAP.KD.ZG  Real agricultural GDP per capita growth ra… The growth ra…\n 4 NY.GDP.PCAP.CD     GDP per capita (current US$)                GDP per capit…\n 5 NY.GDP.PCAP.CN     GDP per capita (current LCU)                GDP per capit…\n 6 NY.GDP.PCAP.KD     GDP per capita (constant 2010 US$)          GDP per capit…\n 7 NY.GDP.PCAP.KD.ZG  GDP per capita growth (annual %)            Annual percen…\n 8 NY.GDP.PCAP.KN     GDP per capita (constant LCU)               GDP per capit…\n 9 NY.GDP.PCAP.PP.CD  GDP per capita, PPP (current international… This indicato…\n10 NY.GDP.PCAP.PP.KD  GDP per capita, PPP (constant 2017 interna… GDP per capit…\n# ℹ 14 more rows\n```\n:::\n:::\n\n\nNow let's map GDP in constant 2017 international dollars (\"NY.GDP.PCAP.PP.KD\") with the mako theme:\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\ncreate_map(var_id = \"NY.GDP.PCAP.PP.KD\", \n           title= \"GDP per capita (constant 2017 internatioal $)\", \n           legend_title = \"Geary-Khamis $\", \n           theme = \"mako\", \n           direction = -1)\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "module-3.1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}