{
  "hash": "aca31b284ee18b0b6efe758a49da99f9",
  "result": {
    "markdown": "---\ntitle: \"Module 3.1\"\nsubtitle: \"Choropleth Maps\"\nformat: html\nhighlight-style: atom-one\nexecute:\n  echo: true\n  message: false\n  warning: false\n---\n\n\n::: {.callout-tip}\n## Prework\n\n- Install `rnaturalearth` (`install.packages(\"rnaturalearth\")`) and have a look at the [documentation](https://cran.r-project.org/web/packages/rnaturalearth/vignettes/rnaturalearth.html)\n- Install `ggthemes` (`install.packages(\"ggthemes\")`)and have a look at [this post](https://rpubs.com/Mentors_Ubiqum/ggthemes_1)) for a brief explanation of how it works\n- Install `magick` and underlying file system to [remove whitespace](https://www.pmassicotte.com/posts/2022-08-15-removing-whitespace-around-figures-quarto/) around maps\n- Then insert this code chunk somewhere in your Quarto document:\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a hook to crop maps as recommended by pmassicotte\n# must have `magick` and its dependencies installed\n\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop)\n```\n:::\n\n:::\n\n## Overview\n\n## Grabbing country shapes from rnaturalearth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(dplyr)\n\nworld_map_df <- ne_countries(scale = \"medium\", returnclass = \"sf\") |> \n    filter(iso_a3 != \"ATA\") # remove Antarctica\n\n#world_map_df |>\n  # select and view first 10 columns\n  #select(1:10) |> \n  #glimpse()\n\nworld_map_df |>\n  select(geometry) # view contents of last column of df (geometry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 234 features and 0 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -58.49229 xmax: 180 ymax: 83.59961\nCRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\nFirst 10 features:\n                         geometry\n1  MULTIPOLYGON (((-69.89912 1...\n2  MULTIPOLYGON (((74.89131 37...\n3  MULTIPOLYGON (((14.19082 -5...\n4  MULTIPOLYGON (((-63.00122 1...\n5  MULTIPOLYGON (((20.06396 42...\n6  MULTIPOLYGON (((20.61133 60...\n7  MULTIPOLYGON (((1.706055 42...\n8  MULTIPOLYGON (((53.92783 24...\n9  MULTIPOLYGON (((-64.54917 -...\n10 MULTIPOLYGON (((45.55234 40...\n```\n:::\n:::\n\n\n## Make a map with geom_sf()\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data = world_map_df) +\n  geom_sf(aes(fill = as.factor(income_grp))) + \n  labs(title = \"World Bank country income categories\")\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Beautify your map\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\nggplot(data = world_map_df) +\n  geom_sf(aes(fill = as.factor(income_grp))) + \n  labs(\n    title = \"World Bank country income categories\",\n    fill = \"Category\"\n    ) +\n    theme_map() + \n    scale_fill_viridis_d()\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Merging rnaturalearth with other data\n\nWe are going to use iso2c to do the merge\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(wbstats)\n\noil_rents_df <- wb_data(c(oil_rents_gdp = \"NY.GDP.PETR.RT.ZS\"), mrnev = 1) \n\nrents_map_df <- left_join(world_map_df, oil_rents_df, join_by(iso_a2 == iso2c))\n\nrents_map_df |>\n  select(last_col(5):last_col()) |> #select last 5 columns of df\n  glimpse() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 234\nColumns: 6\n$ date          <dbl> 2018, 2020, 2020, NA, 2020, NA, NA, 2020, 2020, 2020, 20…\n$ oil_rents_gdp <dbl> 0.000000000, 0.001031176, 24.028004023, NA, 1.053952313,…\n$ obs_status    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ footnote      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ last_updated  <date> 2023-03-30, 2023-03-30, 2023-03-30, NA, 2023-03-30, NA,…\n$ geometry      <MULTIPOLYGON [°]> MULTIPOLYGON (((-69.89912 1..., MULTIPOLYGO…\n```\n:::\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nggplot(data = rents_map_df) +\n  geom_sf(aes(fill = oil_rents_gdp)) + # change var\n  labs(\n    title = \"Oil rents as a % of GDP\", # change title\n    subtitle = \"(Most recent available data)\", # add subtitle\n    fill = \"Percent\", # change legend title\n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    legend.position = \"right\", \n    plot.title = element_text(face = \"bold\") #,\n    #legend.title = element_text(size = 8),\n    #legend.text = element_text(size = 6)\n    ) +\n  scale_fill_viridis_c( # chg from discrete (_d) to continuous (_c)\n      option = \"magma\", #  chg to magma theme\n      labels = scales::label_percent(scale = 1) # add % label for legend\n      ) \n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Turn your map into a function\n\n- save this code as an R. script \n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), # change variable id\n    join_by(iso_a2 == iso2c)\n  ) |> \n  filter(iso_a3 != \"ATA\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + # remove quotes\n  labs(\n    title =  title, # change title\n    fill = legend_title, # change legend title\n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = \"magma\", #  chg theme\n    direction = direction # change direction of scale\n    )\n}\n\ncreate_map(var_id = \"SL.TLF.CACT.FE.ZS\", \n           title= \"Female Labor Force Participation\", \n           legend_title = \"FLFP %\", \n           theme = \"inferno\", \n           direction = -1)\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Use R file as a \"source\" in another document\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"functions/wb-maps.R\", local = knitr::knit_global())\n```\n:::\n\n\nNow I write some text here and then I want to show map, so I call the `create_map()` function that we just made. Let's say I want to show a different indicator with a different theme, maybe GDP per capita. Let's search for it using the wb_search() tool: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_search(\"GDP per capita\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 3\n   indicator_id       indicator                                          indic…¹\n   <chr>              <chr>                                              <chr>  \n 1 5.51.01.10.gdp     Per capita GDP growth                              GDP pe…\n 2 6.0.GDPpc_constant GDP per capita, PPP (constant 2011 international … GDP pe…\n 3 NV.AGR.PCAP.KD.ZG  Real agricultural GDP per capita growth rate (%)   The gr…\n 4 NY.GDP.PCAP.CD     GDP per capita (current US$)                       GDP pe…\n 5 NY.GDP.PCAP.CN     GDP per capita (current LCU)                       GDP pe…\n 6 NY.GDP.PCAP.KD     GDP per capita (constant 2010 US$)                 GDP pe…\n 7 NY.GDP.PCAP.KD.ZG  GDP per capita growth (annual %)                   Annual…\n 8 NY.GDP.PCAP.KN     GDP per capita (constant LCU)                      GDP pe…\n 9 NY.GDP.PCAP.PP.CD  GDP per capita, PPP (current international $)      This i…\n10 NY.GDP.PCAP.PP.KD  GDP per capita, PPP (constant 2017 international … GDP pe…\n# … with 14 more rows, and abbreviated variable name ¹​indicator_desc\n```\n:::\n:::\n\n\n(Note: For an exercise, you could have students use ChatGPT to create a map function and then tweak it to make it work. You could also have them try using a color brewer them instead of viridis).\n\nNow let's map GDP in constant 2017 international dollars (\"NY.GDP.PCAP.PP.KD\") with the mako theme:\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\ncreate_map(var_id = \"NY.GDP.PCAP.PP.KD\", \n           title= \"GDP per capita (constant 2017 internatioal $)\", \n           legend_title = \"Geary-Khamis $\", \n           theme = \"mako\", \n           direction = -1)\n```\n\n::: {.cell-output-display}\n![](module-3.1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "module-3.1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}