{
  "hash": "afe6772a31c1483ce48242f1c2948a25",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Rich Reports\"\nsubtitle: \"Session 5--Revealjs Slides\"\nfooter: \"[DRR Website](https://quarto.training)\"\nlogo: images/drr6502-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n# Overview\n\n## What is Reveal.js?\n\n::: {.incremental}\n- Web-based presentation framework that enables the creation of interactive presentations using HTML\n- Supports dynamic transitions, embedded media, and interactive elements\n- Works across devices and platforms, ensuring your presentation looks great everywhere\n- Offers a wide range of plugins and extensions to enhance your presentations, from analytics to themes\n- Share your presentations as a URL, making it accessible to anyone, anywhere\n:::\n\n## Why Revealjs?\n\n::: {.incremental}\n- You can also make PowerPoint and Beamer (pdf) slides with Quarto\n- Revealjs is more fun and has some key advantages\n  - It's web-based and interactive\n  - It's more accessible\n  - It's easy to share\n- But sometimes other formats can be useful\n  - Can you think of some scenarios where you might want to use PowerPoint or Beamer?\n:::\n\n# Basic Authoring\n\n## Setup {.smaller}\n\n<br>\n\nSetting up a reveal.js presentation in Quarto is easy. You just specify the `revealjs` format. From there you can use the usual YAML arguments like `title:`, `subtitle:`, etc. that you would use in any Quarto document. Here's a simple example:\n\n<br>\n\n```yaml\n---\ntitle: \"Revealjs Presentation\"\nsubtitle: \"For Demonstration Purposes\"\nauthor: \"Your Name\"\ndate: today\nformat: revealjs\n---\n```\n\n## Creating Slides\n\n<br>\n\nSlides are created using the standard markdown syntax. `#` gives you a new section, while  `##` gives you a new slide. Then you can write text and use `-` for bullet points. \n\n```markdown\n# Section Header\n\n## Slide 1\n\nThis is the first slide.\n\n- Bullet 1\n- Bullet 2\n- Bullet 3\n```\n\n## Spacing\n\n- Sometimes you want to have more spacing than the default spacing between lines on each slide. \n- The easiest way to handle this is to insert `<br>` tags where you want the extra space. \n\n```markdown\n## Slide 2\n\n<br>\n\nThis is the content for my second slide. It is going to have this line and then a line break and then some code. \n\n<br>\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n```\n\n## \n\n<br>\n\nIf perchance you don't want a title slide, just eliminate `title`, `subtitle`, etc. from the YAML header. \n\n<br>\n\n```yaml\n---\nformat: revealjs\n---\n\n```\n\n## Incremental Lists\n\n<br>\n\nThere are two ways to get incremental lists. The first is to specify `incremental: true` in the YAML header. \n\n<br>\n\n```yaml\n---\nformat: \n  revealjs:\n    incremental: true\n---\n```\n\n## Incremental Lists\n\n<br>\n\nThe other is to surround the relevant bullet points in a div with the class `incremental`. \n\n<br>\n\n```markdown\n::: {.incremental}\n- Bullet 1\n- Bullet 2\n- Bullet 3\n:::\n```\n\n## Incremental Lists\n\n<br>\n\nOr, let's say you have `incremental: true` in the YAML header, but you want to turn it off for a particular slide. In this case, you can use `nonincremental`. \n\n```markdown\n::: {.nonincremental}\n- Bullet 1\n- Bullet 2\n- Bullet 3\n:::\n```\n\n## Your Turn! \n\n- Start a new Quarto project\n- Create a new Quarto document in your project folder\n- Add the YAML header and specify the `revealjs` format\n- Add slides and sections\n- Use the `incremental` class to create incremental lists\n- Now try setting `incremental: true` in the YAML header \n- Use `nonincremental` to turn off incremental lists for a particular slide\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer1\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0%;right:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# Advanced Authoring\n\n## Content Overflow \n\n<br>\n\nSometimes you have too much material to fit on a slide. In this case, you can use the `.smaller` or `.scrollable` class. You can use curly braces to add these to a particular slide...\n\n<br>\n\n```markdown\n## Slide Title {.smaller}\n\n## Slide Title {.scrollable}\n```\n\n## Content Overflow\n\n<br>\n\nOr you can add them to the YAML header to apply them to the entire presentation... \n\n<br>\n\n```yaml\n---\nformat:\n  revealjs:\n    smaller: true\n    scrollable: true\n---\n```\n\n## Adding Images\n\n<br>\n\nTo add an image, you can use the standard markdown syntax. \n\n<br>\n\n```markdown\n![](images/your-image.png)\n```\n\n## Adding Images\n\n<br>\n\nTo control the width of the image, you can use the `width` attribute. \n\n<br>\n\n```markdown\n![](images/your-image.png){width=50%}\n```\n\n## Columns\n\n<br>\n\nTo put content in columns, you can create a div with the `columns` class. \n\n```markdown\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nLeft column\n:::\n\n::: {.column width=\"60%\"}\nRight column\n:::\n\n::::\n```\n\n## Your Turn! \n\n- Try making a long slide with the `.smaller` class\n- Now use the `.scrollable` class instead\n- Add an image to a slide\n  - Go to Wikimedia Commons and download an image\n  - Add the image to your project folder\n- Make a slide with two columns\n  - On the left, write a few bullet points\n  - On the right, add an image\n  - Use the `width` attribute to control the size of the image\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer2\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0%;right:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# Code and Output\n\n## Code Blocks\n\n<br>\n\n- To add a code block, use the standard markdown syntax\n- You can specify the language for syntax highlighting\n- Just like a normal HTML document, you can add chunk options\n\n## Code Blocks\n\n<br>\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: leaflet_map1\n#| eval: false\n\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n````\n:::\n\n\n## \n\nIf your `echo:` is set to `false`, then you will just see the output. \n\n::: aside\nNote how the output of the leaflet is interactive!\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-8a6a19981108e74a38fc\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8a6a19981108e74a38fc\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[38.90243843683386,-77.0443814477152,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,null,null,\"Elliott School of International Affairs\",{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[38.90243843683386,38.90243843683386],\"lng\":[-77.0443814477152,-77.0443814477152]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## \n\n<br> But if `echo:` is set to `true`, then you will see the code and the output...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-6daf6030fa801f06aaa2\" style=\"width:960px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6daf6030fa801f06aaa2\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[38.90243843683386,-77.0443814477152,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,null,null,\"Elliott School of International Affairs\",{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[38.90243843683386,38.90243843683386],\"lng\":[-77.0443814477152,-77.0443814477152]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## \n\n<br>\n\nAnd just like in a normal HTML document, you can also set these options in the YAML header.\n\n<br>\n\n```yaml\nexecute:\n  echo: false\n  message: false\n  warning: false\n```\n\n## \n\n<br>\n\nFor presentation purposes, you may oly want to show specific lines of code.\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n:::\n\n\n## \n\n<br>\n\nTo do this, you would use the `code-line-numbers` option in the YAML header.\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n:::\n\n\n\n## Your Turn! {.smaller}\n\n- Start a new slide\n- Add an R code chunk to it\n- Add a leaflet map to it\n- Render the slide\n- Try different chunk options \n  - Display only the output\n  - Display code and output\n  - Display just the code\n  - Display only particular lines\n- Try adjusting `evaluate` options in the YAML header\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer3\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0%;right:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# Customization\n\n## Themes\n\n<br> \n\nYou can customize the look of your slides by using a different theme, e.g. \n\n<br>\n\n```yaml\ntheme: dark\n```\n\n::: aside\nSee the Reveal documentation for the [full list](https://quarto.org/docs/presentations/revealjs/#themes) of availalbe themes. \n:::\n\n## Themes\n\n<br>\n\nYou can also add a custom SCSS file to tweak an existing them or create your own: \n\n```scss\n/*-- scss:defaults --*/\n\n$body-bg: #191919;\n$body-color: #fff;\n$link-color: #42affa;\n\n/*-- scss:rules --*/\n\n.reveal .slide blockquote {\n  border-left: 3px solid $text-muted;\n  padding-left: 0.5em;\n}\n```\n\n## Syntax Highlighting\n\n<br> \n\nQuarto offers 20 different syntax highlighting themes. Click [here](https://quarto.org/docs/output-formats/html-code.html#highlighting) to see the available themes. \n\n<br>\n\nYou can select your preferred theme by adding `highlight-style` to the YAML header, e.g. \n\n<br>\n\n```yaml\nhighlight-style: github\n````\n\n## Background Styling\n\n<br>\n\nYou can change the color of your background by adding the `background-color` attribute to a slide.\n\n<br>\n\n```markdown\n## Slide Title {background-color=\"aquamarine\"}\n```\n\n## Background Styling {background-color=\"aquamarine\"}\n\n<br>\n\nYou can change the color of your background by adding the `background-color` attribute to a slide.\n\n<br>\n\n```markdown\n## Slide Title {background-color=\"aquamarine\"}\n```\n\n## Background Styling\n\n<br>\n\nSimilarly, you can add a background image to your slide by adding the `background-image` attribute.\n\n<br>\n\n```markdown\n## Slide Title {background-image=\"/images/drr6502-img.png\" data-background-size=\"contain\" data-background-opacity=\"0.5\"}\n```\n\n## Background Styling {background-image=\"/images/drr6502-img.png\" data-background-size=\"contain\" data-background-opacity=\"0.5\"}\n\n<br>\n\nSimilarly, you can add a background image to your slide by adding the `background-image` attribute.\n\n<br>\n\n```markdown\n## Slide Title {background-image=\"/images/drr6502-img.png\" data-background-size=\"contain\" data-background-opacity=\"0.5\"}\n```\n\n## Background Styling\n\n<br>\n\nAnd you can add a background image to the title slide by adding the `title-slide-attributes` attribute to the YAML header.\n\n<br>\n\n\n::: aside\nSee [here](https://eteitelbaum.quarto.pub/dapp/) for an example.\n:::\n\n```yaml\n---\ntitle: My Slide Show\ntitle-slide-attributes:\n    data-background-image: /path/to/title_image.png\n    data-background-size: contain\n    data-background-opacity: \"0.5\"\n---\n```\n\n## A Few More Tricks and Tips {.smaller}\n\n::: incremental\n- Fade your slide transitions with `transition: fade`\n- Add slide numbers with `slide-number: true`\n- Use `footer:`to add a footer your slides\n- Use `logo:` to add a logo to your slides\n- You can add a chalkboard to your slides by adding `chalkboard: true` to the YAML header\n- You can add speaker notes by creating a div and adding the `notes` attribute to it.\n  - Then you can view them by running the presentation in speaker mode\n- You can use `multiplex: true` to advance slides for your audience\n- And much much more! Check out the [guide](https://quarto.org/docs/presentations/revealjs/) for details\n:::\n\n::: notes\nThese are my speaker notes!\n:::\n\n## My YAML for This Presentation\n\n```yaml\n ---\ntitle: \"Revealjs Slides\"\nsubtitle: \"Session 4--Visualizing Data\"\nfooter: \"[DRR Website](https://quarto.training)\"\nlogo: images/drr6502-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n```\n\n## Your Turn! {.smaller}\n\n<br>\n\n- Add a theme to your presentation\n- Try a different type of syntax highlighting\n- Change the background color of a slide\n- Add a background image to a slide\n- Add a background image to the title slide\n- Try using SCSS to modify the theme style \n- Try a cool trick like `chalkboard` or `multiplex`\n- Upload your presentation to Quarto Pub\n  - `quarto publish quarto-pub mydocument.qmd`\n  \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-binding-2.2.1/leaflet.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}