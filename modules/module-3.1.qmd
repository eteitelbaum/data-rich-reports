---
title: "Module 3.1"
subtitle: "Choropleth Maps"
format: html
highlight-style: atom-one
execute:
  echo: true
  message: false
  warning: false
---

## Prework


- Optional: install `magick` and underlying file system to [remove whitespace](https://www.pmassicotte.com/posts/2022-08-15-removing-whitespace-around-figures-quarto/) around maps

```{r}
# create a hook to crop maps as recommended by pmassicotte
# must have `magick` and its dependencies installed

knitr::knit_hooks$set(crop = knitr::hook_pdfcrop)
```

## Grabbing country shapes from rnaturalearth

```{r}

library(rnaturalearth)
library(dplyr)

world_map_df <- ne_countries(scale = "medium", returnclass = "sf") |> 
    filter(iso_a3 != "ATA") # remove Antarctica

#world_map_df |>
  # select and view first 10 columns
  #select(1:10) |> 
  #glimpse()

world_map_df |>
  select(geometry) # view contents of last column of df (geometry)
``` 

## Make a map with geom_sf()

```{r}
#| crop: true 

library(ggplot2)

ggplot(data = world_map_df) +
  geom_sf(aes(fill = as.factor(income_grp))) + 
  labs(title = "World Bank country income categories")
```


## Beautify your map

```{r}
#| crop: true

library(ggthemes)

ggplot(data = world_map_df) +
  geom_sf(aes(fill = as.factor(income_grp))) + 
  labs(
    title = "World Bank country income categories",
    fill = "Category"
    ) +
    theme_map() + 
    scale_fill_viridis_d()
```

## Merging rnaturalearth with other data

We are going to use iso2c to do the merge

```{r}
#| crop: true

library(wbstats)

oil_rents_df <- wb_data(c(oil_rents_gdp = "NY.GDP.PETR.RT.ZS"), mrnev = 1) 

rents_map_df <- left_join(world_map_df, oil_rents_df, join_by(iso_a2 == iso2c))

rents_map_df |>
  select(last_col(5):last_col()) |> #select last 5 columns of df
  glimpse() 
```


```{r}
#| crop: true 

ggplot(data = rents_map_df) +
  geom_sf(aes(fill = oil_rents_gdp)) + # change var
  labs(
    title = "Oil rents as a % of GDP", # change title
    subtitle = "(Most recent available data)", # add subtitle
    fill = "Percent", # change legend title
    caption = "Source: World Bank Development Indicators"
    ) +
  theme_map() +
  theme(
    legend.position = "right", 
    plot.title = element_text(face = "bold") #,
    #legend.title = element_text(size = 8),
    #legend.text = element_text(size = 6)
    ) +
  scale_fill_viridis_c( # chg from discrete (_d) to continuous (_c)
      option = "magma", #  chg to magma theme
      labels = scales::label_percent(scale = 1) # add % label for legend
      ) 
```

## Turn your map into a function

- save this code as an R. script 

```{r}
#| crop: true

library(rnaturalearth)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(wbstats)

create_map <- function(var_id, title, legend_title, theme, direction){

ne_countries(scale = "medium", returnclass = "sf") |> 
  left_join(
    wb_data(var_id, mrnev = 1), # change variable id
    join_by(iso_a2 == iso2c)
  ) |> 
  filter(iso_a3 != "ATA") |>  
  ggplot() + 
  geom_sf(aes(fill = eval(parse(text=var_id)))) + # remove quotes
  labs(
    title =  title, # change title
    fill = legend_title, # change legend title
    caption = "Source: World Bank Development Indicators"
    ) +
  theme_map() +
  theme(
    plot.title = element_text(face = "bold"),
  ) +
  scale_fill_viridis_c( 
    option = "magma", #  chg theme
    direction = direction # change direction of scale
    )
}

create_map(var_id = "SL.TLF.CACT.FE.ZS", 
           title= "Female Labor Force Participation", 
           legend_title = "FLFP %", 
           theme = "inferno", 
           direction = -1)
```


## Use R file as a "source" in another document

```{r}
source("functions/wb-maps.R", local = knitr::knit_global())
```

Now I write some text here and then I want to show map, so I call the `create_map()` function that we just made:

```{r}
#| crop: true

create_map(var_id = "SL.TLF.CACT.FE.ZS", 
           title= "Female Labor Force Participation", 
           legend_title = "FLFP %", 
           theme = "inferno", 
           direction = -1)
```


But now I want to show a different indicator with a different theme, let's say GDP per capita. Let's search for it: 

```{r}
wb_search("GDP per capita") 
```

Now let's map GDP in constant 2017 international dollars ("NY.GDP.PCAP.PP.KD") with the mako theme:

```{r}
#| crop: true 

create_map(var_id = "NY.GDP.PCAP.PP.KD", 
           title= "GDP per capita (constant 2017 Int'l $)", 
           legend_title = "Geary-Khamis $", 
           theme = "mako", 
           direction = -1)
```

