---
title: "Themes, Annotations and Interactivity"
date: today
date-format: long
footer: "[DataViz 2102 Website](https://dataviz-gwu.rocks)"
logo: images/dataviz-logo.png
format:
  revealjs:
    theme: [simple, custom.scss]
    transition: fade
    slide-number: true
    multiplex: true
    chalkboard: true
execute:
  echo: false
  message: false
  warning: false
  freeze: auto
---


```{r}
#| label: setup

library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(wbstats)
library(countrycode)
library(countdown)

indicators = c(flfp = "SL.TLF.CACT.FE.ZS", gdp_pc = "NY.GDP.PCAP.KD") # define indicators

## Regional levels of FLFP for column chart 

flfp_gdp_regions <- 
  wb_data("SL.TLF.CACT.FE.ZS", country = "regions_only", mrnev = 1) |> 
  rename(
    region = country,
    year = date,
    flfp = SL.TLF.CACT.FE.ZS
  ) |> 
  select(region, iso3c, year, flfp)

## Cross-section of data on FLFP and GDP per capita for scatter plot

flfp_gdp <- wb_data(indicators, end_date = 2021) |> # download data for 2021
    left_join(select(wb_countries(), c(iso3c, region)), by = "iso3c") |>  # add regions
    drop_na() # drop rows with missing values

## Time series data on regional trends in FLFP for line chart

flfp_ts <- wb_data("SL.TLF.CACT.FE.ZS", country = "regions_only", start_date = 1990, end_date = 2022) |> 
  rename(
    region = country,
    year = date,
    flfp = SL.TLF.CACT.FE.ZS
  ) |> 
  select(region, iso3c, year, flfp)
```

## Column Chart from Last Class

```{r}
#| label: column_chart1

flfp_region <- ggplot(flfp_gdp_regions, aes(x = reorder(iso3c, -flfp), y = flfp, fill = region)) +
  geom_col() + 
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  labs(
    x = "Region", 
    y = "Avg. Female Labor Force Participation", 
    title = "Levels of female labor force participation by region", 
    fill = "Region",
    caption = "Source: World Bank"
    ) + 
  scale_fill_viridis_d()

flfp_region
```

## Add a Theme

```{r}
#| label: column_chart2
#| echo: true

flfp_region + theme_minimal()
```

## Can Also Set Theme {.smaller}

<br>

If you like particular theme and want to use it for all of your visualizations, use `theme_set()` in a code chunk at the top of your document, e.g....

<br>

```{r}
#| label: my_setup_chunk
#| echo: fenced

theme_set(theme_minimal())
```

<br>

... and R will apply that theme to all of the visualizations in your document. 

## Your Turn! 

Produce this scatter plot... Then try different [themes](https://ggplot2.tidyverse.org/reference/ggtheme.html).

```{r}
#| label: exercise1

wealth_flfp <- ggplot(flfp_gdp, aes(x = gdp_pc, y = flfp)) + 
  geom_point(aes(color = region)) + # color points by region
  geom_smooth(method = "loess", linewidth = 1) +  # make the line a loess curve
  scale_x_log10(labels = scales::label_dollar()) + # stretch axis, add '$' format
  scale_y_continuous(labels = scales::label_percent(scale = 1)) + # add % label
  labs(
    x= "GDP per Capita", # x-axis title
    y = "Female Labor Force Participation", # y-axis title
    title = "Wealth and female labor force participation", # plot title
    caption = "Source: World Bank Development Indicators", # caption
    color = "Region" # legend title
    ) + scale_color_viridis_d(option = "plasma", end = .7) 

wealth_flfp + theme_dark()
```

```{r}
#| label: setup_timer
countdown(minutes = 10, 
          id = "setup", 
          #bottom = "10%", 
          right = "-15%",
          color_border = "#fff",
          color_text = "#fff",
          color_running_background = "#42affa",
          color_running_text = "black",
          color_finished_background = "#E5D19D",
          color_finished_text = "#00264A")
```

## Your Turn!

```{r}
#| label: exercise1_solution
#| echo: true
#| output: false

wealth_flfp <- ggplot(flfp_gdp, aes(x = gdp_pc, y = flfp)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(method = "loess", linewidth = 1) +
  scale_x_log10(labels = scales::label_dollar()) + 
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  labs(
    x= "GDP per Capita",
    y = "Female Labor Force Participation",
    title = "Wealth and female labor force participation",
    caption = "Source: World Bank Development Indicators",
    color = "Region"
    ) + scale_color_viridis_d(option = "plasma", end = .7) 

wealth_flfp + theme_dark()
```

## Add an Annotation

```{r}
#| label: annotation1

flfp_line <- ggplot(flfp_ts, aes(x = year, y = flfp, color = region)) +
  geom_line(linewidth = 1) + 
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  labs(
    x = "Year", 
    y = "Female Labor Force Participation", 
    title = "Regional trends in female labor force participation", 
    caption = "Source: V-Dem Institute", 
    color = "Country"
  ) + scale_color_viridis_d() +
  theme_minimal()

flfp_line + geom_hline(yintercept = 52, linetype="dashed", color = "red", size = 1) +
  annotate("text", x = 1995, y = 55, label = "Global average")
```

## 

First step, add a horizontal line using `geom_hline()`... 

```{r}
#| echo: true

flfp_line + 
  geom_hline(yintercept = 52, linetype="dashed", color = "red", size = 1) 
```

## 

Second step, the annotation with `annotate()`...

```{r}
#| echo: true 

flfp_line + 
  geom_hline(yintercept = 52, linetype="dashed", color = "red", size = 1) +
  annotate("text", x = 1995, y = 55, label = "Global average")
```

## Vertical Reference Line

```{r}
flfp_line + 
  geom_vline(xintercept=2020, linetype = "dashed", size = 1) +
  annotate("text", x = 2017, y = 35, label = "Pandemic")
```

## 

First step, add a horizontal line using `geom_hline()`... 

```{r}
#| echo: true

flfp_line + 
  geom_vline(xintercept=2020, linetype = "dashed", size = 1)
```

## 

Second step, add the annotation with `annotate()`

```{r}
#| echo: true

flfp_line + 
  geom_vline(xintercept=2020, linetype = "dashed", size = 1) +
  annotate("text", x = 2017, y = 35, label = "Pandemic")
```

## Your Turn!

- Go to module 2.2
- Copy the code you need to make the line chart
- Create a horizontal reference line and annotate it
- In a new code chunk, create a vertical line and annotate it
- Play with the parameters to move and style your line
- Try different text, etc. 

```{r}
#| label: exercise2_timer
countdown(minutes = 10, 
          id = "exercise2", 
          #bottom = "10%", 
          #right = "10%"
          )
```

## Interactivity

```{r}
library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```

## The Code

```{r}
#| echo: true
#| output: false

library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```

## The Code

```{r}
#| echo: true
#| output: false
#| code-line-numbers: "1"

library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```

## The Code

```{r}
#| echo: true
#| output: false
#| code-line-numbers: "6"

library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```

## The Code

```{r}
#| echo: true
#| output: false
#| code-line-numbers: "8"

library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```

## The Code

```{r}
#| echo: true
#| output: false
#| code-line-numbers: "10-14"

library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```


## The Code

```{r}
#| echo: true
#| output: false
#| code-line-numbers: "15-19"

library(plotly)

wealth_flfp_plotly <- wealth_flfp  + 
  scale_color_viridis_d(option = "plasma") +
  theme_minimal() +
  aes(label = country)  # need so ggplot retains label for plotly

ggplotly(wealth_flfp_plotly, tooltip = c("country", "flfp", "gdp_pc")) |> 
  
  # add source
  layout(annotations = list(text = "Source: World Bank Development Indicators",  
                            font = list(size = 10), showarrow = FALSE,
                            xref = 'paper', x = 1.1, xanchor = 'right', xshift = 0,
                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) |> 
  # add web address
  layout(annotations = list(text = "www.dataviz-gwu.rocks", 
                            font = list(size = 10, color = 'grey'), showarrow = FALSE,
                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,
                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))
```

## 

But to make a plotly chart, all you need is this! 

```{r}
#| echo: true

ggplotly(wealth_flfp_plotly)
```
<br>

## Your Turn!

- Go to module 2.2 and create the basic wealth vs. flfp scatter plot
- Now "plotlify" the plot
- At first, don't worry about annotations or tool tip
- Then add in tool tip, play with setting
- Then add in the annotations
- Move annotations, change content

```{r}
#| label: exercise3_timer
countdown(minutes = 10, 
          id = "exercise3", 
          #bottom = "10%", 
          #right = "10%"
          )
```

## Time Permitting

Annotate (comment) the following code...

```{r}
#| echo: true
#| output: false

wealth_flfp <- ggplot(flfp_gdp, aes(x = gdp_pc, y = flfp)) + 
  geom_point(aes(color = region)) + 
  geom_smooth(method = "loess", linewidth = 1) +
  scale_x_log10(labels = scales::label_dollar()) + 
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  labs(
    x= "GDP per Capita",
    y = "Female Labor Force Participation",
    title = "Wealth and female labor force participation",
    caption = "Source: World Bank Development Indicators",
    color = "Region"
    ) + scale_color_viridis_d(option = "plasma", end = .7) 

wealth_flfp + theme_minimal()
```

```{r}
#| label: exercise4_timer
countdown(minutes = 5, 
          id = "exercise4", 
          #bottom = "10%", 
          #right = "10%"
          )
```

## Time Permitting

Annotate  (comment) the following code...

```{r}
#| echo: true
#| output: false

flfp_line <- ggplot(flfp_ts, aes(x = year, y = flfp, color = region)) +
  geom_line(linewidth = 1) + 
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  labs(
    x = "Year", 
    y = "Female Labor Force Participation", 
    title = "Regional trends in female labor force participation", 
    caption = "Source: V-Dem Institute", 
    color = "Country"
  ) + scale_color_viridis_d() +
  theme_minimal()

flfp_line + geom_hline(yintercept = 52, linetype="dashed", color = "red", size = 1) +
  annotate("text", x = 1995, y = 55, label = "Global average")
```

```{r}
#| label: exercise5_timer
countdown(minutes = 5, 
          id = "exercise5", 
          #bottom = "10%", 
          #right = "10%"
          )
```