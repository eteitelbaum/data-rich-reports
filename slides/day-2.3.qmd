---
title: Bar Charts and Histograms
date: today
date-format: long
footer: "[DataViz 2102 Website](https://dataviz-gwu.rocks)"
logo: images/dataviz-logo.png
format:
  revealjs:
    theme: [simple, custom.scss]
    transition: fade
    slide-number: true
    multiplex: true
    chalkboard: true
execute:
  echo: false
  message: false
  warning: false
  freeze: auto
---

## The Grammar of Graphics

- Data viz has a language with its own grammar
- Basic components include:
  - Data we are trying to visualize
  - Aesthetics (dimensions)
  - Geom (e.g. bar, line, scatter plot)
  - Color scales
  - Themes
  - Annotations
  
## 

Let's start with the first two, the data and the aesthetic. 

```{r}
#| label: barchart1
#| echo: true
#| output: false
#| code-line-numbers: "6"

library(readr)
library(ggplot2)

dem_summary <- read_csv("data/dem_summary.csv")

ggplot(dem_summary, aes(x = region, y = polyarchy)) 
```

##

Gives us the axes without any visualization. 

```{r}
#| label: barchart1.1

ggplot(dem_summary, aes(x = region, y = polyarchy)) 
```


##

Now let's add a geom. In this case we want a bar chart so we *add* `geom_col()`

```{r}
#| label: barchart2
#| echo: true
#| output: false

ggplot(dem_summary, aes(x = region, y = polyarchy)) + 
  geom_col()
```

## 

OK but that gets the idea across but looks a little depressing so...

```{r}
#| label: barchart2.1

ggplot(dem_summary, aes(x = region, y = polyarchy)) + 
  geom_col()
```

## 

...let's change the color of the bars by specifying `fill = "steelblue"`. 

```{r}
#| label: barchart3
#| echo: true
#| output: false
#| code-line-numbers: "2"

ggplot(dem_summary, aes(x = region, y = polyarchy)) + 
  geom_col(fill = "steelblue")
```

## 

Note how color of original bars is simply overwritten.

```{r}
#| label: barchart3.1

ggplot(dem_summary, aes(x = region, y = polyarchy)) + 
  geom_col(fill = "steelblue")
```

## 

Now let's *add* some labels with the `labs()` function:

```{r}
#| label: barchart4
#| echo: true
#| output: false
#| code-line-numbers: "3-8"

ggplot(dem_summary, aes(x = region, y = polyarchy)) + 
  geom_col(fill = "steelblue") +
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    )
```

## 

And that gives us... 

```{r}
#| label: barchart4.1

ggplot(dem_summary, aes(x = region, y = polyarchy)) + 
  geom_col(fill = "steelblue") +
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    )
```

## 

Next, we reorder the bars with the `reorder()` function. 

```{r}
#| label: barchart5
#| echo: true
#| output: false
#| code-line-numbers: "1"

ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +
  geom_col(fill = "steelblue") + 
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    )
```

## 

This way, we get a nice, visually appealing ordering of the bars according to levels of democracy...

```{r}
#| label: barchart5.1

ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +
  geom_col(fill = "steelblue") + 
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    )
```

## 

Jumping ahead a little, let's change the theme to `theme_minimal()`. 

```{r}
#| label: barchart6
#| echo: true
#| output: false
#| code-line-numbers: "8"

ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +
  geom_col(fill = "steelblue") + 
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    ) + theme_minimal()
```


## 

Gives us a clean, elegant look. 

```{r}
#| label: barchart6.1

ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +
  geom_col(fill = "steelblue") + 
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    ) + theme_minimal()
```


##

Note that you can also save your plot as an object to modify later.

```{r}
#| label: barchart7
#| echo: true
#| output: false

dem_bar_chart <- ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +
  geom_col(fill = "steelblue")
```

##

Which gives us...

```{r}
#| label: barchart7.1
#| echo: true
 
dem_bar_chart
```

## 

Now let's add our labels.

```{r}
#| label: barchart8
#| echo: true
#| output: false

dem_bar_chart <- dem_bar_chart +
  labs(
    x = "Region", 
    y = "Avg. Polyarchy Score", 
    title = "Democracy by region, 1990 - present", 
    caption = "Source: V-Dem Institute"
    )
```

##

So now we have... 

```{r}
#| label: barchart8.1
#| echo: true

dem_bar_chart
```

## 

Now let's add our theme.

```{r}
#| label: barchart9
#| echo: true
#| output: false

dem_bar_chart <- dem_bar_chart + theme_minimal()
```

##

Voila! 

```{r}
#| label: barchart9.1
#| echo: true

dem_bar_chart
```

##

Change the theme.

```{r}
#| label: barchart10
#| echo: true

dem_bar_chart + theme_bw()
```


## Your Turn! {.smaller}

<br>

*Use your own wrangled data or this code to get started:*

<br>

```{r}
#| label: exercise1
#| echo: true
#| evakl: false

library(readr)
library(ggplot2)

dem_summary <- read_csv("https://raw.githubusercontent.com/eteitelbaum/dataviz-fall-2023/main/modules/data/dem_summary.csv")
```

## 

1. `glimpse()` the data
2. Find a new variable to visualize
3. Make a bar chart with it
4. Change the [color](http://sape.inf.usi.ch/quick-reference/ggplot2/colour) of the bars
5. Order the bars
6. Add labels
7. Add a [theme](https://ggplot2.tidyverse.org/reference/ggtheme.html)
8. Try saving your plot as an object
9. Then change the labels and/or theme

```{r}
#| label: exercise1_timer
countdown::countdown(minutes = 10, 
                     id = "exercise1", 
                     bottom = "10%", 
                     right = "10%",
                     color_border = "#fff",
                     color_text = "#fff",
                     color_running_background = "#42affa",
                     color_running_text = "black",
                     color_finished_background = "#E5D19D",
                     color_finished_text = "#00264A")
```

## Now Try a Histogram

<br>

*Use this code or your own wrangled data to get started*

<br> 

```{r}
#| label: dem_women_data
#| echo: true
#| eval: false

dem_women <- read_csv("https://raw.githubusercontent.com/eteitelbaum/dataviz-fall-2023/main/modules/data/dem_women.csv")
```

##

1. Pick a variable that you want to explore the distribution of
2. Make a histogram
    a. Only specify `x = ` in `aes()`
    b. Specify geom as `geom_histogram`
3. Choose color for bars
4. Choose appropriate labels
5. Add a theme

```{r}
#| label: exercise2_time
countdown::countdown(minutes = 10, id = "exercise2")
```

